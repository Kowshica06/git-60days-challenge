name: CI Workflow

on:
  push:
    branches: [main]                # ðŸ”¹ Challenge 1: Run on push to main
  schedule:                         # ðŸ”¹ Challenge 8: Nightly CRON build
    - cron: '0 1 * * *'
  workflow_dispatch:               # ðŸ”¹ Challenge 10: Manual trigger with input
    inputs:
      environment:
        description: 'Choose environment'
        required: true
        default: 'staging'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:                      # ðŸ”¹ Challenge 9: Matrix for Python versions
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - name: ðŸ”¹ Checkout code        # ðŸ”¹ Challenge 5
      uses: actions/checkout@v3

    - name:  Print repo name      #  Challenge 5
      run: echo "Repository: ${{ github.repository }}"

    - name: ðŸ”¹ Print current date   # ðŸ”¹ Challenge 1
      run: date

    - name: ðŸ”¹ Run hello.sh         # ðŸ”¹ Challenge 2
      run: bash hello.sh

    - name: ðŸ”¹ Linux-only step      # ðŸ”¹ Challenge 3
      if: runner.os == 'Linux'
      run: echo "Running this step only on Linux."

    - name: ðŸ”¹ Echo API key         # ðŸ”¹ Challenge 4
      run: echo "Secret API Key is ${{ secrets.API_KEY }}"

    - name: ðŸ”¹ Set up Python        # ðŸ”¹ Challenge 6
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: ðŸ”¹ Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt || pip install pytest

    - name: ðŸ”¹ Run tests (pytest)
      run: |
        pytest > test-report.txt

    - name: ðŸ”¹ Upload test report   # ðŸ”¹ Challenge 7
      uses: actions/upload-artifact@v4
      with:
        name: test-report-${{ matrix.python-version }}
        path: test-report.txt

    - name: ðŸ”¹ Notify on success    # ðŸ”¹ Challenge 11
      if: success()
      run: echo "âœ… Tests passed for ${{ github.repository }} on branch ${{ github.ref }}"

    - name: ðŸ”¹ Send Slack Notification (optional)
      if: always()  # Run regardless of success or failure
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        if [ -n "$SLACK_WEBHOOK" ]; then
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"ðŸ“¢ CI Workflow completed for '"${{ github.repository }}"' on '"${{ github.ref }}"'"}' \
          $SLACK_WEBHOOK
        fi
